pipeline {
    agent any

    stages {
        stage('Install Dependencies') {
            steps {
                // Install dependencies
                sh 'npm install'
            }
        }

        stage('Run Playwright Tests') {
            steps {
                // Run Playwright tests
                sh 'npm run test'
            }
        }

        stage('Generate Cucumber HTML Report') {
            steps {
                // Generate HTML report from Cucumber JSON files
                cucumber buildStatus: 'UNSTABLE',
                         reportTitle: 'Playwright Test Report',
                         fileIncludePattern: '**/*.json',
                         trendsLimit: 10,
                         classifications: [
                             [
                                 'key': 'Browser',
                                 'value': 'Firefox'
                             ]
                         ]
            }
        }

        stage('Generate Allure Report') {
            steps {
                // Generate Allure report
                sh 'allure generate allure-results --clean -o allure-report'
            }
        }
    }

    post {
        always {
            // Post-action report generation for Cucumber
            cucumber buildStatus: 'UNSTABLE',
                     failedFeaturesNumber: 1,
                     failedScenariosNumber: 1,
                     skippedStepsNumber: 1,
                     failedStepsNumber: 1,
                     classifications: [
                         [key: 'Commit', value: "<a href=\"${GERRIT_CHANGE_URL}\">${GERRIT_PATCHSET_REVISION}</a>"],
                         [key: 'Submitter', value: '${GERRIT_PATCHSET_UPLOADER_NAME}']
                     ],
                     reportTitle: 'Playwright Test Report',
                     fileIncludePattern: '**/*cucumber-report.json',
                     sortingMethod: 'ALPHABETICAL',
                     trendsLimit: 100
            
            // Publish Allure report
            publishHTML(target: [
                allowMissing: false,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'allure-report',  // Allure raporunun bulunduğu klasör
                reportFiles: 'index.html',     // Ana rapor dosyası
                reportName: 'Allure Test Report'
            ])
            
            // Open Allure report
            sh 'open allure-report/index.html'
        }
    }
}
